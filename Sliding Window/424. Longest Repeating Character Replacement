you are given a string s and an integer k. You can choose any character of the string and change it to any other uppercase English character. You can perform this operation at most k times.

Return the length of the longest substring containing the same letter you can get after performing the above operations.

 

Example 1:

Input: s = "ABAB", k = 2
Output: 4
Explanation: Replace the two 'A's with two 'B's or vice versa.
-----------------------------------------------------------------------------------
class Solution {
public:
    int characterReplacement(string s, int k) {
        int i=0,j=0,n=s.size();
        map<char,int>m;int lon=0,ans=-1;
        while(j<n){
            m[s[j]]++;
            lon=max(lon,m[s[j]]);
            if(j-i+1-lon > k){
                m[s[i]]--;
                i++;
            }
            ans=max(ans,j-i+1);
            j++;
            
        }
        return ans;
    }
};
